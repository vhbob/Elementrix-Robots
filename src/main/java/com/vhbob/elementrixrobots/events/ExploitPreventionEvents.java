package com.vhbob.elementrixrobots.events;

import java.util.ArrayList;

import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.entity.ArmorStand;
import org.bukkit.entity.EntityType;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityDamageEvent;
import org.bukkit.event.player.PlayerArmorStandManipulateEvent;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;

import com.vhbob.elementrixrobots.Robots;
import com.vhbob.elementrixrobots.utils.Robot;
import com.vhbob.elementrixrobots.utils.Utils;

public class ExploitPreventionEvents implements Listener {

	private static Robots plugin;

	public ExploitPreventionEvents(Robots plugin) {
		ExploitPreventionEvents.plugin = plugin;
	}

	@SuppressWarnings("deprecation")
	@EventHandler
	public void stopTakeOff(PlayerArmorStandManipulateEvent e) {
		for (ArrayList<Robot> list : Robots.getRobots().values()) {
			for (Robot r : list) {
				if (r.getStand() != null && r.getStand() == e.getRightClicked()) {
					if (r.getOwner().equals(e.getPlayer().getUniqueId())) {
						Player p = e.getPlayer();
						// Open Inventory
						int robots = Robots.getRobots().get(p.getUniqueId()).size();
						Inventory inv = Bukkit.createInventory(null, 54, Utils.parsePlaceholders(
								plugin.getConfig().getString("inv.editor-title"), r, p.getName(), p.getName(), robots));
						// Add items
						inv.setItem(4, Utils.itemBuilder(Material.SKULL_ITEM, "robot", plugin, p.getName(), p.getName(),
								robots, r));
						inv.setItem(1, Utils.itemBuilder(Material.REDSTONE_COMPARATOR, "task-change", plugin,
								p.getName(), p.getName(), robots, r));
						inv.setItem(7, Utils.itemBuilder(Material.ENDER_PEARL, "teleport", plugin, p.getName(),
								p.getName(), robots, r));
						inv.setItem(11, Utils.itemBuilder(Material.CHEST, "chest", plugin, p.getName(), p.getName(),
								robots, r));
						inv.setItem(12, Utils.itemBuilder(Material.NAME_TAG, "name", plugin, p.getName(), p.getName(),
								robots, r));
						inv.setItem(15, Utils.itemBuilder(Material.GOLD_INGOT, "upgrade", plugin, p.getName(),
								p.getName(), robots, r));
						ItemStack leave = Utils.itemBuilder(Material.STAINED_GLASS_PANE, "leave", plugin, p.getName(),
								p.getName(), robots, r);
						leave.setDurability((short) 14);
						inv.setItem(17, leave);
						ItemStack egg = Utils.itemBuilder(Material.MONSTER_EGG, "claim", plugin, p.getName(),
								p.getName(), robots, r);
						egg.setDurability(EntityType.ENDERMITE.getTypeId());
						inv.setItem(18, egg);
						// Fill with panes
						ItemStack pane = new ItemStack(Material.STAINED_GLASS_PANE, 1, (short) 11);
						for (int i = 0; i <= 26; i++)
							if (inv.getItem(i) == null)
								inv.setItem(i, pane);
						for (int i = 27; i < inv.getSize(); i++)
							if (inv.getItem(i) == null && i % 9 == 0 || i % 9 == 8)
								inv.setItem(i, pane);
						p.openInventory(inv);
						Robots.getModifying().remove(p);
						Robots.getModifyingRobot().put(p, Robots.getRobots().get(p.getUniqueId()).indexOf(r));
					}
					e.setCancelled(true);
				}
			}
		}
	}

	@EventHandler
	public void stopDamage(EntityDamageEvent e) {
		if (e.getEntityType() == EntityType.ARMOR_STAND) {
			ArmorStand a = (ArmorStand) e.getEntity();
			for (ArrayList<Robot> rList : Robots.getRobots().values()) {
				for (Robot r : rList) {
					if (r.getStand() != null)
						if (r.getStand().equals(a))
							e.setCancelled(true);
				}
			}
		}
	}

}
